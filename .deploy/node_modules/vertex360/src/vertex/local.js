var express = require('express')
var path = require('path')
var favicon = require('serve-favicon')
var logger = require('morgan')
var cookieParser = require('cookie-parser')
var bodyParser = require('body-parser')
var sessions = require('client-sessions')
var db = require('./db')
require('dotenv').config()

const basePath = __dirname + '/../../../../'

// const opts = {
// 	db: {
// 		type: 'mongo',
// 		url: (process.env.TURBO_ENV == 'dev') ? process.env.MONGODB_URI : process.env.PROD_MONGODB_URI
// 	}
// }

const defaultConfiguration = function(app){
	var publicPath = path.join(basePath, 'public')
	app.use(express.static(publicPath))

	var viewsPath = path.join(basePath, 'views')
	app.set('views', viewsPath)
}

const configureOptions = function(opts, app){
	if (app == null) // should never happen
		return
	
	if (opts == null){
		defaultConfiguration(app)
		return
	}

	const dbConfiguration = opts.db // can be null
	if (dbConfiguration != null){
		if (dbConfiguration.type == null){ // default to mongo
			db.connect(dbConfiguration.url, dbConfiguration.onError)
		}
		else if (dbConfiguration.type == 'mongo'){
			db.connectMongo(dbConfiguration.url, dbConfiguration.onError)
		}
		else {
			db.connectMongo(dbConfiguration.url, dbConfiguration.onError)
		}
		// TODO: check for postgres option
		// else if (opts.db == 'postgresql')
	}

	const viewsDir = opts.views || 'views'
	var viewsPath = path.join(basePath, viewsDir)
	app.set('views', viewsPath)

	const staticDir = opts.static || 'public'
	var publicPath = path.join(basePath, staticDir)
	app.use(express.static(publicPath))
}

module.exports = {

	app: function(opts){ // opts can be null
		var app = express()
		configureOptions(opts, app)

		app.use(bodyParser.json())
		app.use(bodyParser.urlencoded({extended: false}))

		app.use(cookieParser())
		app.use(logger('dev'))

		if (process.env.SESSION_SECRET){
			app.use(sessions({
				cookieName: 'vertexSession',
				secret: process.env.SESSION_SECRET,
				duration: 24*60*60*1000, // 1 day
				activeDuration:30*60*1000
			}))
		}

		// var viewsPath = path.join(basePath, 'views')
		// app.set('views', viewsPath)

		// var publicPath = path.join(basePath, 'public')
		// app.use(express.static(publicPath))

		app.set('view engine', 'mustache')
		app.engine('mustache', require('hogan-middleware').__express)
		return app
	},

	router: function(){
		var router = new express.Router()
		return router
	}

}
